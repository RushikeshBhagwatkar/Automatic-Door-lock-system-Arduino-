#include <Keypad.h>
#include <LiquidCrystal.h>
#include <Servo.h>
#include<Servo.h>
#define buzzerPin 11
#define ledRed 13
#define ledBlue 12
#define ledGreen 10

#define Password_Length 5


long second = 20;
long countdown_time = second;


Servo myservo;
LiquidCrystal lcd(A0, A1, A2, A3, A4, A5);

int pos = 90;

char Data[Password_Length];
char Master[Password_Length] = "2244";
byte data_count = 0, master_count = 0;

bool Pass_is_good;
bool door = false;
char customKey;

//PING SENSOR
const int pingPin = 8;
long duration,distance;


//---preparing keypad---/

const byte ROWS = 4;
const byte COLS = 4;
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};


byte rowPins[ROWS] = {7, 6, 5, 4};
byte colPins[COLS] = {3, 2, 1, 0};

Keypad customKeypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS);


//--- Main Action ---/
void setup()
{
  myservo.attach(9);
  DoorClose();
  lcd.begin(16, 2);
  lcd.print("Protected Screen");
  loading("Loading");
  pinMode(buzzerPin,OUTPUT);
  pinMode(13,OUTPUT);
  pinMode(12,OUTPUT);
  pinMode(10,OUTPUT);
  lcd.clear();
}


void loop()
{
 Logan();
}
void Logan()
{
  ultrasonicSensor();
  if(distance<=100)
  {
    countdown();
    digitalWrite(ledBlue,HIGH);
    System();
  }
  else if(distance>100)
  {
    clearData();
    door = false;
  }
  else
  {
    delay(1000);
    lcd.clear();
    clearData();
  }
}


void countdown()
{
   long countdowntime_seconds = countdown_time - (millis() / 1000);
  
  if (countdowntime_seconds >= 0) 
  {
    //long countdown_minute = ((countdowntime_seconds / 60) % 60);
    long countdown_sec = countdowntime_seconds % 15;
    lcd.setCursor(14, 1);
    
    
    if (countdown_sec < 10) 
    {
      lcd.print("0");
    }
    lcd.print(countdown_sec);

    if (countdowntime_seconds == 0 && data_count == 0) 
    {
      digitalWrite(buzzerPin,HIGH);
      digitalWrite(ledRed,HIGH);
      declare();
    }
    else
    {
      System();
    }
    delay(500);
  }
}
int i;
void timer2(){
  for(i=10;i>=0;i--)
  {
    lcd.setCursor(14,1);
    lcd.println(i);
    delay(1000);
  }
}

void declare()
{
  long countdowntime_seconds = countdown_time - (millis() / 1000);
  long countdown_sec = countdowntime_seconds % 15;
  if (countdown_sec == 0)
  {
    exit(0);
  }
}


void clearData()
{
  lcd.clear();
  digitalWrite(ledRed,LOW);
  digitalWrite(ledBlue,LOW);
  digitalWrite(buzzerPin,LOW);
  while (data_count != 0)
  { 
    Data[data_count--] = 0;
  }
  return;
}

void DoorClose()
{
  for (pos = 90; pos >= 0; pos -= 10) { 
    myservo.write(pos);
  }
}

void DoorOpen()
{
  for (pos = 0; pos <= 90; pos += 10) {
    myservo.write(pos);  
  }
}

void loading (char msg[]) {
  ultrasonicSensor();
  if(distance<=100)
  {
  digitalWrite(ledBlue,HIGH);  
  lcd.setCursor(0, 1);
  lcd.print(msg);

  for (int i = 0; i < 9; i++) {
    delay(1000);
    lcd.print(".");
  }
  }
  else if(distance>100)
  {
    clearData();
  }
}

void System()
{
  lcd.setCursor(0, 0);
  lcd.print("Enter Password");
  customKey = customKeypad.getKey();
  
  if (customKey)
  {
    Data[data_count] = customKey;
    lcd.setCursor(data_count, 1);
    lcd.print(Data[data_count]);
    data_count++;
  }
 
  
  if (data_count == Password_Length - 1)
  {
    if (!strcmp(Data, Master))
    {
      digitalWrite(ledGreen,HIGH);
      digitalWrite(ledBlue,LOW);
      lcd.clear();
      DoorOpen();
      lcd.print(" Door is Open ");
      door = true;
      digitalWrite(buzzerPin,LOW);
      timer2();
      lcd.clear();
      lcd.print(" Time is up! ");
      lcd.setCursor(1,1);
      lcd.print("Door is Closed!");
      delay(1000);
      DoorClose();
      door = false;      
    }
    
    else
    {
      lcd.clear();
      lcd.print(" Wrong Password ");
      digitalWrite(buzzerPin,HIGH);
      digitalWrite(ledRed,HIGH);
      digitalWrite(ledBlue,LOW);
      digitalWrite(ledGreen,LOW);
      door = false;
    }
    delay(1000);
    lcd.clear();
    clearData();
  }
}

void ultrasonicSensor()
{
  pinMode(pingPin, OUTPUT);
  digitalWrite(pingPin, LOW);
  delayMicroseconds(2);
  digitalWrite(pingPin, HIGH);
  delayMicroseconds(5);
  digitalWrite(pingPin, LOW);

  pinMode(pingPin, INPUT);
  duration = pulseIn(pingPin, HIGH);
  distance = microsecondsToCentimeters(duration);
}
long microsecondsToCentimeters(long microseconds)
{
  // The speed of sound is 340 m/s or 29 microseconds per centimeter.
  // The ping travels out and back, so to find the distance of the object we
  // take half of the distance travelled.
  return microseconds / 29 / 2;
}